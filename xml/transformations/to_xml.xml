<?xml version="1.0" encoding="ISO-8859-1"?>
<transformation name="to_xml" last-updated="2007.10.18">

<title>Transform C++ code into XML</title>

<description>
<p>This transformation generates a XML tree where nodes relate to C++ source code tokens.</p>
<p>For example, the following file (file.cpp):</p>
<example>
#include &lt;iostream&gt;

int main()
{
    std::cout &lt;&lt; "Hello World\n";
}
</example>
<p>will be transformed into new file named file.cpp.xml:</p>
<example>
&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;
&lt;cpp-source file-name="test.cpp"&gt;
    &lt;token name="pp_hheader" line="1" column="0"&gt;#include &amp;lt;iostream&amp;gt;&lt;/token&gt;
    &lt;token name="newline" line="1" column="19"&gt;![CDATA[
]]&lt;/token&gt;
    &lt;token name="newline" line="2" column="0"&gt;![CDATA[
]]&lt;/token&gt;
    &lt;token name="int" line="3" column="0"&gt;int&lt;/token&gt;
    &lt;token name="space" line="3" column="3"&gt; &lt;/token&gt;
    &lt;token name="identifier" line="3" column="4"&gt;main&lt;/token&gt;
    &lt;token name="leftparen" line="3" column="8"&gt;(&lt;/token&gt;
    &lt;token name="rightparen" line="3" column="9"&gt;)&lt;/token&gt;
    &lt;token name="newline" line="3" column="10"&gt;![CDATA[
]]&lt;/token&gt;
    &lt;token name="leftbrace" line="4" column="0"&gt;{&lt;/token&gt;
    &lt;token name="newline" line="4" column="1"&gt;![CDATA[
]]&lt;/token&gt;
    &lt;token name="space" line="5" column="0"&gt;    &lt;/token&gt;
    &lt;token name="identifier" line="5" column="4"&gt;std&lt;/token&gt;
    &lt;token name="colon_colon" line="5" column="7"&gt;::&lt;/token&gt;
    &lt;token name="identifier" line="5" column="9"&gt;cout&lt;/token&gt;
    &lt;token name="space" line="5" column="13"&gt; &lt;/token&gt;
    &lt;token name="shiftleft" line="5" column="14"&gt;&amp;lt;&amp;lt;&lt;/token&gt;
    &lt;token name="space" line="5" column="16"&gt; &lt;/token&gt;
    &lt;token name="stringlit" line="5" column="17"&gt;"Hello World\n"&lt;/token&gt;
    &lt;token name="semicolon" line="5" column="32"&gt;;&lt;/token&gt;
    &lt;token name="newline" line="5" column="33"&gt;![CDATA[
]]&lt;/token&gt;
    &lt;token name="rightbrace" line="6" column="0"&gt;}&lt;/token&gt;
    &lt;token name="newline" line="6" column="1"&gt;![CDATA[
]]&lt;/token&gt;
    &lt;token name="eof" line="7" column="0"&gt;&lt;/token&gt;
&lt;/cpp-source&gt;
</example>
<p>Note: If the source code does not use line splicing, then concatenation of all XML node values is equivalent to the original C++ code.</p>
</description>

<script><![CDATA[# transform the source file into XML file

foreach f [getSourceFileNames] {
    set outFileName "${f}.xml"
    set outFile [open $outFileName "w"]
    puts $outFile "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>"
    puts $outFile "<cpp-source file-name=\"${f}\">"
    foreach t [getTokens $f 1 0 -1 -1 {}] {
        set value [lindex $t 0]
        set line [lindex $t 1]
        set column [lindex $t 2]
        set name [lindex $t 3]

        if {$value == "\n"} {
            set value "!\[CDATA\[\n\]]"
        } else {
            set value [regsub -all "&" $value {\&amp;}]
            set value [regsub -all "<" $value {\&lt;}]
            set value [regsub -all ">" $value {\&gt;}]
        }
        puts $outFile "    <token name=\"${name}\" line=\"${line}\" column=\"${column}\">${value}</token>"
    }
    puts $outFile "</cpp-source>"
    close $outFile
}
]]></script>

<test>
<source><![CDATA[@ test.cpp
#include <iostream>

int main()
{
    std::cout << "Hello World\n";
}
@ test_transformed
<?xml version="1.0" encoding="ISO-8859-1"?>
<cpp-source file-name="test.cpp">
    <token name="pp_hheader" line="1" column="0">#include &lt;iostream&gt;</token>
    <token name="newline" line="1" column="19">![CDATA[
]]</token>
    <token name="newline" line="2" column="0">![CDATA[
]]</token>
    <token name="int" line="3" column="0">int</token>
    <token name="space" line="3" column="3"> </token>
    <token name="identifier" line="3" column="4">main</token>
    <token name="leftparen" line="3" column="8">(</token>
    <token name="rightparen" line="3" column="9">)</token>
    <token name="newline" line="3" column="10">![CDATA[
]]</token>
    <token name="leftbrace" line="4" column="0">{</token>
    <token name="newline" line="4" column="1">![CDATA[
]]</token>
    <token name="space" line="5" column="0">    </token>
    <token name="identifier" line="5" column="4">std</token>
    <token name="colon_colon" line="5" column="7">::</token>
    <token name="identifier" line="5" column="9">cout</token>
    <token name="space" line="5" column="13"> </token>
    <token name="shiftleft" line="5" column="14">&lt;&lt;</token>
    <token name="space" line="5" column="16"> </token>
    <token name="stringlit" line="5" column="17">"Hello World\n"</token>
    <token name="semicolon" line="5" column="32">;</token>
    <token name="newline" line="5" column="33">![CDATA[
]]</token>
    <token name="rightbrace" line="6" column="0">}</token>
    <token name="newline" line="6" column="1">![CDATA[
]]</token>
    <token name="eof" line="7" column="0"></token>
</cpp-source>
]]></source>
<output-file name="test.cpp.xml" />
</test>
</transformation>
