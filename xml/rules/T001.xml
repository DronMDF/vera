<?xml version="1.0" encoding="ISO-8859-1"?>
<rule name="T001" last-updated="2006.06.02">

<title>One-line comments should not have forced continuation</title>

<description>
<p>The one-line comment is a comment that starts with <code>//</code>.</p>
<p>The usual intent is to let the comment continue till the end of the line, but the preprocessing rules of the language allow to actually continue the comment in the next line if <emph>line-splicing</emph> is forced with the backslash at the end of the line:</p>
<example>
void foo()
{
    // this comment is continued in the next line \
    exit(0);
}
</example>
<p>It is not immediately obvious what happens in this example. Moreover, the line-splicing works only if the backslash is really the last character in the line - which is error prone because any white characters that might appear after the backslash will change the meaning of the program without being visible in the code.</p>
</description>

<compliance>
<standard name="Inspirel" />
</compliance>

<script><![CDATA[# One-line comments should not have forced continuation

foreach f [getSourceFileNames] {
    foreach t [getTokens $f 1 0 -1 -1 {cppcomment}] {
        set lineNumber [lindex $t 1]
        set wholeLine [getLine $f $lineNumber]

        if {[string index $wholeLine end] == "\\"} {
            report $f $lineNumber "line-continuation in one-line comment"
        }
    }
}
]]></script>

<test>

<source><![CDATA[@ test.cpp
void foo()
{
    // this is a comment \
    with line-continuation
}
]]></source>

<result><![CDATA[test.cpp:3: line-continuation in one-line comment
]]></result>

</test>
</rule>
