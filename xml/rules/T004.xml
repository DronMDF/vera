<?xml version="1.0" encoding="ISO-8859-1"?>
<rule name="T004" last-updated="2006.12.12">

<title>Some keywords should be immediately followed by a colon</title>

<description>
<p>Keywords from the following list:</p>
<ul>
    <li><code>default</code></li>
    <li><code>private</code></li>
    <li><code>protected</code></li>
    <li><code>public</code></li>
</ul>
<p>should be immediately followed by a colon, unless used in the list of base classes:</p>
<example>
class A : public B, private C
{
public:
     A();
     ~A();
protected:
     // ...
private:
     // ...
};

void fun(int a)
{
     switch (a)
     {
     // ...
     default:
          exit(0);
     }
}
</example>
</description>

<compliance>
<standard name="Inspirel" />
</compliance>

<script><![CDATA[# Some keywords should be immediately followed by a colon

set keywords {
    default
    private
    protected
    public
}

proc isKeyword {s} {
    global keywords
    return [expr [lsearch $keywords $s] != -1]
}

foreach f [getSourceFileNames] {
    set lastKeywordLine 0
    set lastKeywordColumn 0
    set lastKeywordValue ""
    set last ""
    foreach t [getTokens $f 1 0 -1 -1 [concat $keywords colon]] {
        set tokenValue [lindex $t 0]
        set tokenName [lindex $t 3]
        if {$tokenName == "colon"} {
            if {$last == "keyword" && $lastKeywordLine != 0} {
                set line [lindex $t 1]
                set column [lindex $t 2]
                if {$line != $lastKeywordLine ||
                    $column != [expr $lastKeywordColumn + [string length $lastKeywordValue]]} {
                    set nonWhiteFound "false"
                    foreach tb [getTokens $f $lastKeywordLine [expr $lastKeywordColumn + 1] $line $column {}] {
                        set tbName [lindex $tb 3]
                        if {[lsearch {space newline ccomment cppcomment} $tbName] == -1} {
                            set nonWhiteFound "true"
                            break
                        }
                    }
                    if {$nonWhiteFound == "false"} {
                        report $f $line "colon not immediately after the \'$lastKeywordValue\' keyword"
                    }
                }
            }
            set last "colon"
        } else {
            set lastKeywordLine [lindex $t 1]
            set lastKeywordColumn [lindex $t 2]
            set lastKeywordValue $tokenValue
            set last "keyword"
        }
    }
}
]]></script>

<test>

<source><![CDATA[@ test.cpp
class A : public B, public C
{
public :
public:
private :
private/*abc*/:
private:
public :
public:
    void foo() { switch(x){default :; } }
    void bar() { switch(x){default: ; } }
};
]]></source>

<result><![CDATA[test.cpp:3: colon not immediately after the 'public' keyword
test.cpp:5: colon not immediately after the 'private' keyword
test.cpp:6: colon not immediately after the 'private' keyword
test.cpp:8: colon not immediately after the 'public' keyword
test.cpp:10: colon not immediately after the 'default' keyword
]]></result>

</test>
</rule>
